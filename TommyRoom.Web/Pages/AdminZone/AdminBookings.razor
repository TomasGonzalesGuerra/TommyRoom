@page "/AdminBookings"
@inject ISnackbar _snackbar
@inject IRepository _repository
@inject IDialogService _dialogService
@inject NavigationManager _navigationManager
@inject SweetAlertService _sweetAlertService
@attribute [Authorize(Roles = "SuperAdmin")]

<PageTitle> Admin Bookings 😁 </PageTitle>


@if (AllBookings == null)
{
    <MudPaper Class="pa-4">
        <MudImage Src="https://th.bing.com/th/id/OIG4.7UF2xD7d4zNIQTKR5bfn?pid=ImgGn" Alt="No Friends" Style="width: auto; height: 60vh; object-fit: cover;" />

        <MudText Typo="Typo.h5" Color="Color.Error"> Sin Amigos ??? </MudText>
    </MudPaper>
}
else
{
    <MudTable Items="@AllBookings" Bordered="true" Hover="true" FixedHeader="true" Loading="@_loading" LoadingProgressColor="Color.Info" Style="width: 75%;">
        <ToolBarContent>
            <MudText Typo="Typo.h4"> Las Reservaciones </MudText>
            <MudSpacer />
            <MudTextField @bind-Value="SearchString" Placeholder="Buscar..." Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" />
            <MudSpacer />
        </ToolBarContent>

        <HeaderContent>
            <MudTh> Habitación </MudTh>
            <MudTh> Inicio - Final </MudTh>
            <MudTh> Precio x Noche </MudTh>
            <MudTh> Total a Pagar </MudTh>
            <MudTh> Propietario </MudTh>
            <MudTh> Húesped </MudTh>
            <MudTh> Acciones </MudTh>
        </HeaderContent>

        <RowTemplate>
            <MudTd DataLabel="Habitación">
                <MudStack>
                    <MudAvatar Size="Size.Medium"><MudImage Src="@context.Room!.Photo"></MudImage></MudAvatar>
                    <MudText Typo="Typo.caption" Color="Color.Inherit"> @context.Room!.Name </MudText>
                </MudStack>
            </MudTd>

            <MudTd DataLabel="Inicio - Final">
                <MudText Typo="Typo.caption" Color="Color.Primary"> @context.StartTime.ToLocalTime().ToString("dd/MM/yyyy") - @context.EndTime.ToLocalTime().ToString("dd/MM/yyyy") </MudText>
            </MudTd>

            <MudTd DataLabel="Precio x Noche">
                <MudText Typo="Typo.caption" Color="Color.Inherit"> @context.Room!.PricePerNight </MudText>
            </MudTd>

            <MudTd DataLabel="Total a Pagar">
                <MudText Typo="Typo.caption" Color="Color.Inherit"> @context.TotalPrice </MudText>
            </MudTd>

            <MudTd DataLabel="Propietario">
                <MudStack>
                    <MudAvatar Size="Size.Medium"><MudImage Src="@context.Room!.User!.Photo"></MudImage></MudAvatar>
                    <MudText Typo="Typo.caption" Color="Color.Inherit"> @context.Room!.User!.FullName </MudText>
                </MudStack>
            </MudTd>

            <MudTd DataLabel="Húesped">
                <MudStack>
                    <MudAvatar Size="Size.Medium"><MudImage Src="@context.User!.Photo"></MudImage></MudAvatar>
                    <MudText Typo="Typo.caption" Color="Color.Inherit"> @context.User!.FullName </MudText>
                </MudStack>
            </MudTd>

            <MudTd DataLabel="Acciones">
                <MudIconButton OnClick="Saluda" Icon="@Icons.Material.Outlined.RemoveRedEye" Color="Color.Success" Size="Size.Medium" />
                <MudIconButton OnClick="Saluda" Icon="@Icons.Material.Outlined.Delete" Color="Color.Error" Size="Size.Medium" />
            </MudTd>
        </RowTemplate>

        <PagerContent>
            <MudTablePager PageSizeOptions="new int[] { 5, 10, 15 }" />
        </PagerContent>
    </MudTable>
}


@code {
    private List<Booking> AllBookings = [];
    private bool _loading = true;
    private string SearchString = string.Empty;

    protected override async Task OnInitializedAsync() => await LoadAsync();

    private async Task LoadAsync()
    {
        try
        {
            var responseHppt = await _repository.GetAsync<List<Booking>>("api/Bookings");
            AllBookings = responseHppt.Response!;
            _loading = false;
            Console.WriteLine("Cargando Reservaciones...");
            Console.WriteLine(AllBookings.Count());
        }
        catch (Exception ex)
        {
            await _sweetAlertService.FireAsync("Error", ex.Message, SweetAlertIcon.Error);
        }
    }

    private void Saluda()
    {
        Console.WriteLine("Hola, Saluda desde UserDashboard.razor");
    }
}
